#!/bin/bash

echo "üê≥ –°–±–æ—Ä–∫–∞ APK —á–µ—Ä–µ–∑ Docker..."

# –°–æ–∑–¥–∞–µ–º Dockerfile
cat > Dockerfile << 'EOF'
FROM node:18-alpine

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
RUN apk add --no-cache openjdk11 wget unzip

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Android SDK
RUN wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip && \
    unzip -q commandlinetools-linux-*.zip && \
    mkdir -p android-sdk/cmdline-tools/latest && \
    mv cmdline-tools/* android-sdk/cmdline-tools/latest/ && \
    rm commandlinetools-linux-*.zip

ENV ANDROID_SDK_ROOT=/android-sdk
ENV PATH=$PATH:/android-sdk/cmdline-tools/latest/bin

# –ü—Ä–∏–Ω—è—Ç–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–π –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
RUN yes | sdkmanager --licenses > /dev/null 2>&1 && \
    sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"

WORKDIR /app
COPY . .

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
RUN npm install && npm run build && \
    npm install @capacitor/core @capacitor/cli @capacitor/android && \
    npx cap init "–í–µ—Ç–ê—Ç–ª–∞—Å" "com.vet.atlas" --web-dir dist && \
    npx cap add android && npx cap sync && \
    cd android && chmod +x ./gradlew && ./gradlew assembleDebug

CMD ["cp", "/app/android/app/build/outputs/apk/debug/app-debug.apk", "/output/"]
EOF

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker build -t vet-anatlas-builder .
docker run -v $(pwd):/output vet-anatlas-builder

echo "‚úÖ APK —Å–æ–±—Ä–∞–Ω: app-debug.apk"